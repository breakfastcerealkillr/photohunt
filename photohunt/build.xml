<project name="build" default="compile">
  <description>
  The basic build file for PhotoHunt and its components. 
  </description>
  
  <!-- Always make environment variables available with the "env." prefix. --> 
  <property environment="env"/> 
      
  <!-- Make sure we're running a Java 5 or better. --> 
  <condition property="java.5.available">  
    <or>
      <contains string="${java.version}" substring="1.5" /> 
      <contains string="${java.version}" substring="1.6" /> 
    </or> 
  </condition>   
  <fail message="This package requires Java 5 or 6." unless="java.5.available"/> 

   <!-- Make sure we're running Ant 1.7. --> 
   <condition property="ant.1.7.available"> 
     <contains string="${ant.version}" substring="1.7" />
   </condition>  
   <fail message="This package requires Ant 1.7." unless="ant.1.7.available"/>
    
  <!-- Make sure that JUnit is installed. --> 
  <available file="${env.JUNIT_HOME}" type="dir" property="junit.available"/>
  <fail message="This package requires JUnit to be installed and JUNIT_HOME defined" unless="junit.available"/>

  <!-- Make sure that HttpUnit is installed. --> 
  <available file="${env.HTTPUNIT_HOME}" type="dir" property="httpunit.available"/>
  <fail message="This package requires HttpUnit to be installed and HTTPUNIT_HOME defined" unless="httpunit.available"/>

  <!-- Make sure that Tomcat is installed. --> 
  <available file="${env.CATALINA_HOME}" type="dir" property="tomcat.available"/>
  <fail message="This package requires Tomcat to be installed and CATALINA_HOME defined" unless="tomcat.available"/>
  
  <!-- Make sure that Hackystat Ant Build sensor is installed. -->
  <available classname="org.hackystat.sensor.ant.BuildSensorInstallationAntTask" property="ant.sensor.available"/>
  <fail unless="ant.sensor.available" message="This package requires the Hackystat Ant Sensor to be installed."/>
  <taskdef name="hacky-build" classname="org.hackystat.sensor.ant.BuildSensorInstallationAntTask" />
  <property name="hackystat.verbose.mode" value="false" />
  <hacky-build verbose="${hackystat.verbose.mode}" />      

  <!-- Basic properties for this system. --> 
  <property name="system.name" value="photohunt" />
  <property name="majorVersionNumber" value="3" />
  <property name="minorVersionNumber" value="0" />
  <tstamp>
     <format property="TSTAMP" pattern="HH:mm:ss"/>
     <format property="DAYSTAMP" pattern="Mdd"/>
   </tstamp>
  <property name="version" value="${majorVersionNumber}.${minorVersionNumber}.${DAYSTAMP}"/>
  <property name="buildtime" value="${TODAY} ${TSTAMP}"/>
  <!--<property name="system.main.class" value="org.traffometer.traffobase.server.Main"/> -->
  <property name="system.vendor" value="University of Hawaii at Manoa"/>
  <!-- <property name="PacketStorePath" value="/WEB-INF/PacketStore/" /> -->
  
  
  <!-- Values are: JDOM, Properties, Derby, or Serialized -->
  <property name="persistency.mechanism" value="Derby" />
  <!-- default directry of the database for Derby -->
  <property name="derby.location" value="${basedir}" />
  
  <!-- Basic directory structure. --> 
  <property name="src.dir" location="${basedir}/src" />
  <property name="lib.dir" location="${basedir}/lib" />
  <property name="build.dir" location="${basedir}/build" />
  <property name="pictures.dir" location="${build.dir}/war/pictures" />
  
  <!-- Needed for compilation, junit, and tomcat deploy/undeploy. -->
  <property name="war.web-inf.classes.dir" location="${build.dir}/war/WEB-INF/classes"/>
  <property name="war.web-inf.lib.dir" location="${build.dir}/war/WEB-INF/lib"/>
  <property name="test.host" value="http://localhost:8080/"/>  
  

  <!-- File where javac output is placed -->
  <property name="javac.output" location="${build.dir}/javac.output" />

  <!-- Jar file name for stand alone server -->
  <property name="jar.filename" location="${build.dir}/jar/${system.name}.jar" />
  
  

  <!-- The compile classpath is useful for the compile, javadoc, junit, emma, and other targets. -->
  <path id="compile.classpath">
    <fileset file="${env.JUNIT_HOME}/junit*.jar"/>
    <fileset file="${env.CATALINA_HOME}/common/lib/servlet-api.jar"/>
    <fileset file="${env.HTTPUNIT_HOME}/lib/httpunit.jar"/>
    <fileset file="${lib.dir}/jar/activation.jar"/>
    <fileset file="${lib.dir}/jar/imap.jar" />
    <fileset file="${lib.dir}/jar/mail.jar" />
    <fileset file="${lib.dir}/jar/mailapi.jar" />
    <fileset file="${lib.dir}/jar/pop3.jar" />
    <fileset file="${lib.dir}/jar/smtp.jar" />
    <fileset file="${lib.dir}/hibernate3.jar" />
    <fileset file="${lib.dir}/hsqldb.jar" />
    <fileset file="${lib.dir}/log4j-1.2.11.jar" />  
    <fileset file="${basedir}/webapp/WEB-INF/lib/jsf-api.jar" />
    <fileset file="${basedir}/webapp/WEB-INF/lib/servlet-api.jar" />
    <fileset file="${basedir}/webapp/WEB-INF/lib/ajax4jsf-1.1.1-20070427.000947-56.jar" />
    
  	<!-- Not needed yet
    <fileset file="${basedir}/webapp/WEB-INF/lib/derby/derby.jar"/>
    <fileset file="${basedir}/webapp/WEB-INF/lib/derby/derbyLocale_de_DE.jar"/>
    <fileset file="${basedir}/webapp/WEB-INF/lib/derby/derbyLocale_es.jar"/>
    <fileset file="${basedir}/webapp/WEB-INF/lib/derby/derbyLocale_fr.jar"/>
    <fileset file="${basedir}/webapp/WEB-INF/lib/derby/derbyLocale_it.jar"/>
    <fileset file="${basedir}/webapp/WEB-INF/lib/derby/derbyLocale_ja_JP.jar"/>
    <fileset file="${basedir}/webapp/WEB-INF/lib/derby/derbyLocale_ko_KR.jar"/>
    <fileset file="${basedir}/webapp/WEB-INF/lib/derby/derbyLocale_pt_BR.jar"/>
    <fileset file="${basedir}/webapp/WEB-INF/lib/derby/derbyLocale_zh_CN.jar"/>
    <fileset file="${basedir}/webapp/WEB-INF/lib/derby/derbyLocale_zh_TW.jar"/>
    -->
    
    
    <pathelement path="${build.dir}/classes"/>
    <pathelement path="${war.web-inf.classes.dir}"/>
  </path> 
  <!--
  <uptodate property="jarBuild.notRequired" targetfile="${jar.filename}">
    <srcfiles dir= "${src.dir}" includes="**/*.java"/>
  </uptodate> -->
  
  <target name="compile" depends="clean" description="Compiles the code.">
    <mkdir dir="${build.dir}/classes"/>
    <record name="${javac.output}" action="start" emacsmode="true" loglevel="info"/>
    <javac srcdir="${src.dir}" destdir="${build.dir}/classes" source="1.5" debug="on" includeAntRuntime="no">
      <classpath refid="compile.classpath" />
      <compilerarg value="-Xlint" />
    </javac>
    
    <!-- Now compile the code into build/war/WEB-INF/classes -->
    <mkdir dir="${war.web-inf.classes.dir}"/>
    <javac srcdir="${src.dir}" destdir="${war.web-inf.classes.dir}" source="1.5" debug="on" includeAntRuntime="no">
      <classpath refid="compile.classpath" />
      <compilerarg value="-Xlint" />
    </javac>
    <record name="${javac.output}" action="stop" />
   
  </target>
  

  
  <target name="clean" description="Delete build/ directory.">
    <delete dir="${build.dir}" />
  </target>

  <target name="convertLineEndings" description="Makes line endings compatible with host platform.">
    <fixcrlf srcdir="${basedir}" includes="*.build.xml"/>
  </target>

</project>
